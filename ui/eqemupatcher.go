// THIS FILE WAS GENERATED BY A TOOL, DO NOT EDIT!

package main

import (
	"fmt"
	"github.com/lxn/walk"
)

type myDialogUI struct {
	noProgressBtn    *walk.PushButton
	indeterminateBtn *walk.PushButton
	normalBtn        *walk.PushButton
	errBtn           *walk.PushButton
	pausedBtn        *walk.PushButton
	startBtn         *walk.PushButton
	serverListBox    *walk.ListBox
	serverList       *ServerModel
	progressBar      *walk.ProgressBar
	splashImg        *walk.ImageView
}

func (w *MyDialog) init(owner walk.Form) (err error) {
	if w.Dialog, err = walk.NewDialog(owner); err != nil {
		return err
	}

	succeeded := false
	defer func() {
		if !succeeded {
			w.Dispose()
		}
	}()

	var font *walk.Font
	if font == nil {
		font = nil
	}

	w.SetName("Dialog")

	w.SetMinMaxSize(walk.Size{305, 371}, walk.Size{0, 0})
	if err := w.SetClientSize(walk.Size{432, 611}); err != nil {
		return err
	}
	if err := w.SetTitle(`Dialog`); err != nil {
		return err
	}

	// noProgressBtn
	if w.ui.noProgressBtn, err = walk.NewPushButton(w); err != nil {
		return err
	}
	w.ui.noProgressBtn.SetName("noProgressBtn")
	if err := w.ui.noProgressBtn.SetBounds(walk.Rectangle{40, 60, 161, 23}); err != nil {
		return err
	}
	if err := w.ui.noProgressBtn.SetText(`NoProgress`); err != nil {
		return err
	}
	if err := w.ui.noProgressBtn.SetMinMaxSize(walk.Size{0, 0}, walk.Size{161, 16777215}); err != nil {
		return err
	}

	// indeterminateBtn
	if w.ui.indeterminateBtn, err = walk.NewPushButton(w); err != nil {
		return err
	}
	w.ui.indeterminateBtn.SetName("indeterminateBtn")
	if err := w.ui.indeterminateBtn.SetBounds(walk.Rectangle{40, 90, 161, 23}); err != nil {
		return err
	}
	if err := w.ui.indeterminateBtn.SetText(`Indeterminate`); err != nil {
		return err
	}
	if err := w.ui.indeterminateBtn.SetMinMaxSize(walk.Size{0, 0}, walk.Size{161, 16777215}); err != nil {
		return err
	}

	// normalBtn
	if w.ui.normalBtn, err = walk.NewPushButton(w); err != nil {
		return err
	}
	w.ui.normalBtn.SetName("normalBtn")
	if err := w.ui.normalBtn.SetBounds(walk.Rectangle{40, 120, 161, 23}); err != nil {
		return err
	}
	if err := w.ui.normalBtn.SetText(`Normal`); err != nil {
		return err
	}
	if err := w.ui.normalBtn.SetMinMaxSize(walk.Size{0, 0}, walk.Size{161, 16777215}); err != nil {
		return err
	}

	// errBtn
	if w.ui.errBtn, err = walk.NewPushButton(w); err != nil {
		return err
	}
	w.ui.errBtn.SetName("errBtn")
	if err := w.ui.errBtn.SetBounds(walk.Rectangle{40, 150, 161, 23}); err != nil {
		return err
	}
	if err := w.ui.errBtn.SetText(`Error`); err != nil {
		return err
	}

	// pausedBtn
	if w.ui.pausedBtn, err = walk.NewPushButton(w); err != nil {
		return err
	}
	w.ui.pausedBtn.SetName("pausedBtn")
	if err := w.ui.pausedBtn.SetBounds(walk.Rectangle{40, 180, 161, 23}); err != nil {
		return err
	}
	if err := w.ui.pausedBtn.SetText(`Paused`); err != nil {
		return err
	}

	// startBtn
	if w.ui.startBtn, err = walk.NewPushButton(w); err != nil {
		return err
	}
	w.ui.startBtn.SetName("startBtn")
	if err := w.ui.startBtn.SetBounds(walk.Rectangle{290, 180, 75, 23}); err != nil {
		return err
	}
	if err := w.ui.startBtn.SetText(`START`); err != nil {
		return err
	}

	if w.ui.serverListBox, err = walk.NewListBox(w); err != nil {
		return err
	}
	if err := w.ui.serverListBox.SetBounds(walk.Rectangle{290, 200, 100, 100}); err != nil {
		return err
	}
	w.ui.serverList = BuildServerList()
	w.ui.serverListBox.SetModel(w.ui.serverList)

	if w.ui.splashImg, err = walk.NewImageView(w); err != nil {
		return err
	}
	if err := w.ui.splashImg.SetBounds(walk.Rectangle{10, 6, 400, 450}); err != nil {
		return err
	}

	if w.ui.progressBar, err = walk.NewProgressBar(w); err != nil {
		return err
	}
	if err := w.ui.progressBar.SetBounds(walk.Rectangle{10, 521, 400, 39}); err != nil {
		return err
	}
	w.ui.progressBar.SetValue(50)
	// Tab order

	succeeded = true

	client, err := DetectClientVersion()
	if err != nil {
		walk.MsgBox(w, "Error Detecting Client", err.Error(), walk.MsgBoxIconError)
		return err
	}
	w.SetTitle(client.FullName)
	fmt.Println(client.FullName)

	//walk.MsgBox(w, "Success?", "Scucess!", walk.MsgBoxOK)
	return nil
}

func (mw *myDialogUI) lb_CurrentIndexChanged() {
	i := mw.serverListBox.CurrentIndex()
	item := &mw.serverList.entries[i]

	//mw.te.SetText(item.value)

	fmt.Println("CurrentIndex: ", i)
	fmt.Println("CurrentEnvVarName: ", item.name)
}

func (mw *myDialogUI) lb_ItemActivated() {
	value := mw.serverList.entries[mw.serverListBox.CurrentIndex()].value

	fmt.Println("Value", value)
	//walk.MsgBox(mw.Dialog, "Value", value, walk.MsgBoxIconInformation)
}

func (dlg *MyDialog) setProgress(value int) {
	dlg.ui.progressBar.SetValue(value)
	dlg.ProgressIndicator().SetCompleted(uint32(value))
}
